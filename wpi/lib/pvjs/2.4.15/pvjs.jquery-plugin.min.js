function polyfillsLoader(t,r){console.log(t.toString()),window.setTimeout(function(){return r(null)},200)}var polyfillsServiceIri="http://cdn.polyfill.io/v1/polyfill.min.js?features=Array.prototype.map";polyfillsLoader(polyfillsServiceIri,function(){require=function t(r,e,i){function n(o,a){if(!e[o]){if(!r[o]){var u="function"==typeof require&&require;if(!a&&u)return u(o,!0);if(s)return s(o,!0);var l=new Error("Cannot find module '"+o+"'");throw l.code="MODULE_NOT_FOUND",l}var f=e[o]={exports:{}};r[o][0].call(f.exports,function(t){var e=r[o][1][t];return n(e?e:t)},f,f.exports,t,r,e,i)}return e[o].exports}for(var s="function"==typeof require&&require,o=0;o<i.length;o++)n(i[o]);return n}({"./lib/jquery-plugin.js":[function(t,r){var e=t("lodash"),i=t("./main.js"),n=t("./utils");r.exports=function(t,r){"use strict";void 0!==typeof r&&(r.fn.pvjs=function(t){var e=this.each(function(){var e=r(this),n=e.data("pvjs"),s="object"==typeof t&&t;n||e.data("pvjs",new i(this,s))});return"get"===t?r.map(this,function(t){return r(t).data("pvjs").getPublicInstance()}):e}),t.jqueryPvjsPlugin=function(t,r){var s;return s=n.isElement(t)?[[t]]:d3.selectAll(t),e.map(s[0],function(t){void 0===t.data&&(t.data={});var e,n="object"==typeof r?r:{};return void 0===t.data.pvjs?t.data.pvjs=e=new i(t,n):e=t.data.pvjs,e})}}(window,jQuery)},{"./main.js":"/Users/andersriutta/Sites/pvjs/lib/main.js","./utils":"/Users/andersriutta/Sites/pvjs/lib/utils.js",lodash:"/Users/andersriutta/Sites/pvjs/node_modules/lodash/dist/lodash.js"}]},{},["./lib/jquery-plugin.js"])});
//# sourceMappingURL=pvjs.jquery-plugin.min.js.map